#! /usr/bin/env python3

import asyncio
import argparse
import minilocker
import glob

def format_point(pt):
    return "x = % 8f\ty = % 8f\tz = % 8f" % (pt.x, pt.y, pt.z)

async def main():
    parser = argparse.ArgumentParser(
        prog = "minilocker-dump"
    )
    parser.add_argument(
        "-s", "--serial",
        help = "Serial port to use",
        default = "/dev/ttyACM*"
    )
    parser.add_argument(
        "-a", "--accelerometer",
        help = "Print accelerometer output",
        action = "store_true"
    )
    parser.add_argument(
        "-g", "--gyro",
        help = "Print gyroscope output",
        action = "store_true"
    )
    parser.add_argument(
        "-m", "--magnetometer",
        help = "Print magnetometer output",
        action = "store_true"
    )
    args = parser.parse_args()

    if all([not x for x in [args.accelerometer, args.gyro, args.magnetometer]]):
        parser.error("At least one of -a/-g/-m has to be specified")
        return

    ml = await minilocker.MiniLocker.connect(glob.glob(args.serial)[0])

    cimu = None
    cmag = None
    while True:
        if not cimu:
            cimu = asyncio.Task(ml.next_imu())
        if not cmag:
            cmag = asyncio.Task(ml.next_magnet())

        done, _ = await asyncio.wait([cimu, cmag], return_when = asyncio.FIRST_COMPLETED)

        if cimu.done():
            acc, gyr = cimu.result()
            if args.accelerometer:
                print("acc: %s" % format_point(acc))
            if args.gyro:
                print("gyr: %s" % format_point(gyr))
            cimu = None
        if cmag.done():
            if args.magnetometer:
                print("mag: %s" % format_point(cmag.result()))
            cmag = None

if __name__ == "__main__":
    asyncio.get_event_loop().run_until_complete(main())
